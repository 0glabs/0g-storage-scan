definitions:
  api.AccountInfo:
    properties:
      balance:
        description: The balance in layer 1
        type: number
      dataTotal:
        description: Total Size of storage data
        type: integer
      fileCount:
        description: Total number of files
        type: integer
      rewardCount:
        description: Total number of distributed reward recodes
        type: integer
      storageFeeTotal:
        description: Total storage fee
        type: number
      txCount:
        description: Total number of layer1 transaction
        type: integer
    type: object
  api.AddressStat:
    description: Hex40 stat data information
    properties:
      addressActive:
        description: Number of active hex40 in a specific time interval
        type: integer
      addressNew:
        description: Number of newly increased hex40 in a specific time interval
        type: integer
      addressTotal:
        description: Total number of hex40 by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
    type: object
  api.AddressStatList:
    description: Hex40 address stat list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/api.AddressStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  api.BusinessError:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  api.DATxInfo:
    description: DA submission transaction information
    properties:
      blockNumber:
        description: The block where the submit event is emitted
        type: integer
      epoch:
        description: Epoch index in DataUpload event
        type: integer
      from:
        description: File uploader address
        type: string
      method:
        description: The name of the submit event
        type: string
      quorumID:
        description: QuorumID in DataUpload event
        type: integer
      rootHash:
        description: Merkle root of the data to upload
        type: string
      status:
        description: Data upload status, 0-not verified,1-verified
        type: integer
      storageFee:
        description: The storage fee required to upload the file
        type: number
      timestamp:
        description: The block time when submit event emits
        type: integer
      txHash:
        description: The transaction where the submit event is emitted
        type: string
    type: object
  api.DATxList:
    description: DA submission information list
    properties:
      list:
        description: DA submission list
        items:
          $ref: '#/definitions/api.DATxInfo'
        type: array
      total:
        description: The total number of da submission returned
        type: integer
    type: object
  api.DataStat:
    description: Storage data information
    properties:
      dataSize:
        description: Size of storage data in a specific time interval
        type: integer
      dataTotal:
        description: Total Size of storage data by a certain time
        type: integer
      fileCount:
        description: Number of files in a specific time interval
        type: integer
      fileTotal:
        description: Total number of files by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
    type: object
  api.DataStatList:
    description: Storage data list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/api.DataStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  api.FeeStat:
    description: Storage fee information
    properties:
      statTime:
        description: Statistics time
        type: string
      storageFee:
        description: The base fee for storage in a specific time interval
        type: number
      storageFeeTotal:
        description: The total base fee for storage by a certain time
        type: number
    type: object
  api.FeeStatList:
    description: Storage fee list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/api.FeeStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  api.MinerStat:
    description: Miner stat data information
    properties:
      minerActive:
        description: Number of active miner in a specific time interval
        type: integer
      minerNew:
        description: Number of newly increased miner in a specific time interval
        type: integer
      minerTotal:
        description: Total number of miner by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
    type: object
  api.MinerStatList:
    description: Miner stat list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/api.MinerStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  api.Reward:
    description: Reward information
    properties:
      amount:
        description: The reward amount
        type: number
      blockNumber:
        description: The block where the reward event is emitted
        type: integer
      miner:
        description: Miner address
        type: string
      timestamp:
        description: The block time when reward event emits
        type: integer
      txHash:
        description: The transaction where the reward event is emitted
        type: string
    type: object
  api.RewardList:
    description: Miner reward list
    properties:
      list:
        description: Miner reward list
        items:
          $ref: '#/definitions/api.Reward'
        type: array
      total:
        description: The total number of miner reward returned
        type: integer
    type: object
  api.StorageFeeStat:
    description: Stat storage fee information
    properties:
      chargeToken:
        allOf:
        - $ref: '#/definitions/api.TokenInfo'
        description: Charge token info
      storageFeeTotal:
        description: Total storage fee
        type: number
    type: object
  api.StorageTxDetail:
    description: Submission transaction information
    properties:
      blockNumber:
        description: The block where the submit event is emitted
        type: integer
      dataSize:
        description: File size in bytes
        type: integer
      endPosition:
        description: The ending position of the file stored in the storage node
        type: integer
      expiration:
        description: Expiration date of the uploaded file
        type: integer
      from:
        description: File uploader address
        type: string
      gasFee:
        description: The gas fee of the transaction on layer1
        type: integer
      gasLimit:
        description: The gas limit of the transaction on layer1
        type: integer
      gasUsed:
        description: The gas used of the transaction on layer1
        type: integer
      method:
        description: The name of the submit event is always `submit`
        type: string
      rootHash:
        description: Merkle root of the file to upload
        type: string
      segments:
        description: The total number of segments the file is split into
        type: integer
      startPosition:
        description: The starting position of the file stored in the storage node
        type: integer
      status:
        description: File upload status, 0-not uploaded,1-uploading,2-uploaded
        type: integer
      storageFee:
        description: The storage fee required to upload the file
        type: number
      timestamp:
        description: The block time when submit event emits
        type: integer
      txHash:
        description: The transaction where the submit event is emitted
        type: string
      txSeq:
        description: Submission index in submit event
        type: string
      uploadedSegments:
        description: The number of segments the file has been uploaded
        type: integer
    type: object
  api.StorageTxInfo:
    description: Submission transaction information
    properties:
      blockNumber:
        description: The block where the submit event is emitted
        type: integer
      dataSize:
        description: File size in bytes
        type: integer
      from:
        description: File uploader address
        type: string
      method:
        description: The name of the submit event is always `submit`
        type: string
      rootHash:
        description: Merkle root of the file to upload
        type: string
      segments:
        description: The total number of segments the file is split into
        type: integer
      status:
        description: File upload status, 0-not uploaded,1-uploading,2-uploaded
        type: integer
      storageFee:
        description: The storage fee required to upload the file
        type: number
      timestamp:
        description: The block time when submit event emits
        type: integer
      txHash:
        description: The transaction where the submit event is emitted
        type: string
      txSeq:
        description: Submission index in submit event
        type: integer
      uploadedSegments:
        description: The number of segments the file has been uploaded
        type: integer
    type: object
  api.StorageTxList:
    description: Submission information list
    properties:
      list:
        description: Submission list
        items:
          $ref: '#/definitions/api.StorageTxInfo'
        type: array
      total:
        description: The total number of submission returned
        type: integer
    type: object
  api.Summary:
    description: Storage summary information
    properties:
      logSync:
        allOf:
        - $ref: '#/definitions/stat.LogSyncInfo'
        description: Synchronization information of submit event
      storageFee:
        allOf:
        - $ref: '#/definitions/api.StorageFeeStat'
        description: Storage fee information
    type: object
  api.TokenInfo:
    description: Charge token information
    properties:
      address:
        description: The address of the token contract
        type: string
      decimals:
        description: Token decimals
        type: integer
      name:
        description: Token name
        type: string
      native:
        description: True is native token, otherwise is not
        type: boolean
      symbol:
        description: Token symbol
        type: string
    type: object
  api.TxStat:
    description: Storage transaction information
    properties:
      statTime:
        description: Statistics time
        type: string
      txCount:
        description: Number of layer1 transaction in a specific time interval
        type: integer
      txTotal:
        description: Total number of layer1 transaction by a certain time
        type: integer
    type: object
  api.TxStatList:
    description: Storage transaction list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/api.TxStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  stat.LogSyncInfo:
    description: Submit log sync information
    properties:
      layer1-logSyncHeight:
        description: Synchronization height of submit log on blockchain
        type: integer
      logSyncHeight:
        description: Synchronization height of submit log on storage node
        type: integer
    type: object
info:
  contact: {}
  description: Use any http client to fetch data from the 0G Storage Scan.
  title: 0G Storage Scan API
  version: "1.0"
paths:
  /accounts/{address}:
    get:
      consumes:
      - application/json
      description: Query account information for specified account
      parameters:
      - description: The account address
        in: path
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.AccountInfo'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Account's information
      tags:
      - account
  /accounts/{address}/rewards:
    get:
      consumes:
      - application/json
      description: Query storage rewards for specified account
      parameters:
      - description: The submitter address of the uploaded file
        in: path
        name: address
        type: string
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.RewardList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Account's storage reward list
      tags:
      - account
  /accounts/{address}/txs:
    get:
      consumes:
      - application/json
      description: Query storage transactions for specified account, support root
        hash filter
      parameters:
      - description: The submitter address of the uploaded file
        in: path
        name: address
        type: string
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: The merkle root hash of the uploaded file
        in: query
        name: rootHash
        type: string
      - description: The layer1 tx hash of the submission
        in: query
        name: txHash
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.StorageTxList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Account's storage transaction list
      tags:
      - account
  /da/txs:
    get:
      consumes:
      - application/json
      description: Query DA transactions
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: The merkle root hash of the uploaded file
        in: query
        name: rootHash
        type: string
      - description: The layer1 tx hash of the submission
        in: query
        name: txHash
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.DATxList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA transaction list
      tags:
      - DA transaction
  /rewards:
    get:
      consumes:
      - application/json
      description: Query storage rewards
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.RewardList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Storage reward list
      tags:
      - reward
  /stats/address:
    get:
      consumes:
      - application/json
      description: Query hex40 address statistics, including incremental, active and
        full data, and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.AddressStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Address statistics
      tags:
      - statistic
  /stats/fee:
    get:
      consumes:
      - application/json
      description: Query fee statistics, including incremental and full data, and
        support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.FeeStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Storage fee statistics
      tags:
      - statistic
  /stats/layer1-tx:
    get:
      consumes:
      - application/json
      description: Query transaction statistics, including incremental and full data,
        and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.TxStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Layer1 transaction statistics
      tags:
      - statistic
  /stats/miner:
    get:
      consumes:
      - application/json
      description: Query miner statistics, including incremental, active and full
        data, and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.MinerStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Miner statistics
      tags:
      - statistic
  /stats/storage:
    get:
      consumes:
      - application/json
      description: Query data storage statistics, including incremental and full data,
        and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.DataStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Data storage statistics
      tags:
      - statistic
  /stats/summary:
    get:
      description: Query statistics summary includes `storage fee` and `log sync height`
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.Summary'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Statistics summary
      tags:
      - statistic
  /txs:
    get:
      consumes:
      - application/json
      description: Query storage transactions
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: The merkle root hash of the uploaded file
        in: query
        name: rootHash
        type: string
      - description: The layer1 tx hash of the submission
        in: query
        name: txHash
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.StorageTxList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Storage transaction list
      tags:
      - transaction
  /txs/{txSeq}:
    get:
      consumes:
      - application/json
      description: Query storage transaction by txSeq
      parameters:
      - description: storage transaction sequence number
        in: path
        name: txSeq
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/api.StorageTxDetail'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: Storage transaction information
      tags:
      - transaction
swagger: "2.0"
