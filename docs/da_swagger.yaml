definitions:
  api.BusinessError:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  da.DAClientStat:
    description: DA client information
    properties:
      clientActive:
        description: Number of active da client in a specific time interval
        type: integer
      clientNew:
        description: Number of da client in a specific time interval
        type: integer
      clientTotal:
        description: Total number of da client by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
    type: object
  da.DAClientStatList:
    description: DA client stat list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/da.DAClientStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  da.DADataStat:
    description: DA storage data information
    properties:
      blobNew:
        description: Number of blobs in a specific time interval
        type: integer
      blobTotal:
        description: Total number of blobs by a certain time
        type: integer
      dataSizeNew:
        description: Size of storage data in a specific time interval
        type: integer
      dataSizeTotal:
        description: Total size of storage data by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
      storageFeeNew:
        description: Storage fee in a specific time interval
        type: number
      storageFeeTotal:
        description: Total storage fee by a certain time
        type: number
    type: object
  da.DADataStatList:
    description: DA storage data list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/da.DADataStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  da.DASignerStat:
    description: DA signer information
    properties:
      signerActive:
        description: Number of active da signer in a specific time interval
        type: integer
      signerNew:
        description: Number of da signer in a specific time interval
        type: integer
      signerTotal:
        description: Total number of da signer by a certain time
        type: integer
      statTime:
        description: Statistics time
        type: string
    type: object
  da.DASignerStatList:
    description: DA signer stat list
    properties:
      list:
        description: Stat list
        items:
          $ref: '#/definitions/da.DASignerStat'
        type: array
      total:
        description: The total number of stat returned
        type: integer
    type: object
  da.DATxInfo:
    description: DA submission transaction information
    properties:
      blockNumber:
        description: The block where the submit event is emitted
        type: integer
      epoch:
        description: Epoch index in DataUpload event
        type: integer
      from:
        description: File uploader address
        type: string
      method:
        description: The name of the submit event
        type: string
      quorumID:
        description: QuorumID in DataUpload event
        type: integer
      rootHash:
        description: Merkle root of the data to upload
        type: string
      status:
        description: Data upload status, 0-not verified,1-verified
        type: integer
      storageFee:
        description: The storage fee required to upload the file
        type: number
      timestamp:
        description: The block time when submit event emits
        type: integer
      txHash:
        description: The transaction where the submit event is emitted
        type: string
    type: object
  da.DATxList:
    description: DA submission information list
    properties:
      list:
        description: DA submission list
        items:
          $ref: '#/definitions/da.DATxInfo'
        type: array
      total:
        description: The total number of da submission returned
        type: integer
    type: object
  da.Reward:
    description: Reward information
    properties:
      amount:
        description: The reward amount
        type: number
      blockNumber:
        description: The block where the reward event is emitted
        type: integer
      epoch:
        description: The consecutive blocks in 0g chain is divided into groups of
          EpochBlocks and each group is an epoch.
        type: integer
      miner:
        description: Miner address
        type: string
      quorumID:
        description: The i-th quorum in an epoch
        type: integer
      rootHash:
        description: The data root
        type: string
      sampleRound:
        description: DA Sample round
        type: integer
      timestamp:
        description: The block time when reward event emits
        type: integer
      txHash:
        description: The transaction where the reward event is emitted
        type: string
    type: object
  da.RewardList:
    description: Miner reward list
    properties:
      list:
        description: Miner reward list
        items:
          $ref: '#/definitions/da.Reward'
        type: array
      total:
        description: The total number of miner reward returned
        type: integer
    type: object
info:
  contact: {}
  description: "Use any http client to fetch data from the 0G DA Scan.\n\n## Common
    Error Messages\n### Response code and message\nAn API call that encounters an
    error will return non-zero as its response code. The error message will be returned
    in the message field and the detailed reason for the error will be returned in
    the data field.\n\n| Error code | Error message                                      |\n|:-----------|:---------------------------------------------------|\n|
    0          | Success                                            |\n| 1          |
    Invalid parameter,see Data for detailed error.     |\n| 2          | Internal
    server error,see Data for detailed error. |\n| 3          | Too many requests,see
    Data for detailed error.     |\n\ne.g.\n```json\n{\n\"code\": 2,\n\"message\":\"Internal
    server error\",\n\"data\":\"No matching DA-submit record found, txSeq 1000000\"\n}\n```\n###
    Http status code\nTo distinguish backend service error and gateway error, we only
    use `200` and `600` as HTTP response status code:\n- 200: success, or known business
    error, e.g. entity not found.\n- 600: unexpected system error, e.g. database error,
    blockchain rpc error, io error.\n\n## Rate Limit\nHere are references for various
    API tiers and their rate limits.\n\n| API Tier\t   | Price            | \tRate
    Limit                           |\n|:------------|:-----------------|:-----------------------------------------|\n|
    Free\t       | $0               | 5 calls/second, up to 100,000 calls/day  |\n|
    Standard\t   | To be determined | 20 calls/second, up to 500,000 calls/day |\n|
    Enterprise  | To be determined | Customize on demand                      |\n\n\n\n\n\n"
  title: 0G DA Scan API
  version: "1.0"
paths:
  /rewards:
    get:
      consumes:
      - application/json
      description: Query DA rewards
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.RewardList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA reward list
      tags:
      - reward
  /stats/client:
    get:
      consumes:
      - application/json
      description: Query DA client statistics, including incremental, active and full
        data, and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.DAClientStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA client statistics
      tags:
      - statistic
  /stats/signer:
    get:
      consumes:
      - application/json
      description: Query DA signer statistics, including incremental, active and full
        data, and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.DASignerStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA signer statistics
      tags:
      - statistic
  /stats/storage:
    get:
      consumes:
      - application/json
      description: Query DA data storage statistics, including incremental and full
        data, and support querying at hourly or daily time intervals
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 2000
        minimum: 1
        name: limit
        type: integer
      - description: Timestamp in seconds
        in: query
        name: minTimestamp
        type: integer
      - description: Timestamp in seconds
        in: query
        name: maxTimestamp
        type: integer
      - default: day
        description: Statistics interval
        enum:
        - hour
        - day
        in: query
        name: intervalType
        type: string
      - default: desc
        description: Sort by timestamp
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.DADataStatList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA data storage statistics
      tags:
      - statistic
  /txs:
    get:
      consumes:
      - application/json
      description: Query DA transactions
      parameters:
      - default: 0
        description: The number of skipped records, usually it's pageSize * (pageNumber
          - 1)
        in: query
        minimum: 0
        name: skip
        type: integer
      - default: 10
        description: The number of records displayed on the page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: The merkle root hash of the uploaded file
        in: query
        name: rootHash
        type: string
      - description: The layer1 tx hash of the submission
        in: query
        name: txHash
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.DATxList'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA transaction list
      tags:
      - transaction
  /txs/{blockNumber}/{epoch}/{quorumID}/{dataRoot}:
    get:
      consumes:
      - application/json
      description: Query DA transaction by blockNumber, epoch, quorumId, dataRoot
      parameters:
      - description: Block number at which the file is uploaded
        in: path
        name: blockNumber
        required: true
        type: string
      - description: The consecutive blocks in 0g chain is divided into groups of
          EpochBlocks and each group is an epoch
        in: path
        name: epoch
        required: true
        type: string
      - description: Quorum id in an epoch
        in: path
        name: quorumID
        required: true
        type: string
      - description: Data root
        in: path
        name: dataRoot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.BusinessError'
            - properties:
                Data:
                  $ref: '#/definitions/da.DATxInfo'
              type: object
        "600":
          description: ""
          schema:
            $ref: '#/definitions/api.BusinessError'
      summary: DA transaction information
      tags:
      - transaction
swagger: "2.0"
