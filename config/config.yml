# EVM space SDK client configurations
eth:
  # Fullnode HTTP endpoint
  url: http://15.152.71.57:8545
  # Retry times if failure, if 0 never
  # retry: 0
  # Interval duration before each retry
  # retryInterval: 1s
  # Request timeout duration
  # requestTimeout: 3s
  # Max connections allowed per fullnode
  # maxConnsPerHost: 1024

# storage SDK client configurations
storage:
  # Storage node rpc url
  url: http://54.219.26.22:5678
  # Retry times if failure, if 0 never
  # retry: 0
  # Interval duration before each retry
  # retryInterval: 1s
  # Request timeout duration
  # requestTimeout: 3s
  # Max connections allowed per storage node
  # maxConnsPerHost: 1024

# Blockchain sync configurations
sync:
  # The block number from which to sync flow submit
  blockWhenFlowCreated: 1
  # The blockchain type from which to sync data
  # syncFromConflux: false
  # To avoid pivot switch frequently, skip some blocks ahead of the latest block
  # delayBlocksAgainstLatest: 30
  # The number of blocks to query at a time during catchup, 0 means no limit
  # batchBlocksOnCatchup: 0
  # The number of blocks to query at a batch all
  # batchBlocksOnBatchCall: 1000
  # The number of txs to query at a batch all
  # batchTxsOnBatchCall: 1000

# Flow contract info configurations
flow:
  # Flow contract address
  address: 0x8873cc79c5b3b5666535C825205C9a128B1D75F1
  # Flow submit event signature
  submitEventSignature: 0x167ce04d2aa1981994d3a31695da0d785373335b1078cec239a1a3a2c7675555

# Charge info configurations
# When charging in ERC20 token, configure `erc20TokenAddress` and `erc20TransferEventSignature`
# When charging in native token, configure `symbol` and `decimals`
charge:
  # Charge in ERC20 token address
  erc20TokenAddress:
  # ERC20 transfer event signature
  erc20TransferEventSignature: 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
  # Token symbol
  symbol: A0GI
  # Token decimals
  decimals: 18

# Reward contract info configurations
reward:
  # Reward contract address
  address: 0x233B2768332e4Bae542824c93cc5c8ad5d44517E
  # Distribute reward event signature
  rewardEventSignature: 0x83617a1b0f847971f005bd162dde513cfe93df96e6293c3bbb5fe9c40629dd4c

# DAEntrance contract info configurations
daEntrance:
  # DAEntrance contract address
  address: 0x5ea5BDF94909EF030C0F36d0F3BEd04Ed87489B1
  # Data upload event signature
  dataUploadSignature: 0x57b8b1a6583dc6ce934dfba3d66f2a8e1591b6e171bb2e0921cc64640277087b
  # Erasure commitment verified event signature
  erasureCommitmentVerifiedSignature: 0x0f1b20d87bebd11dddaaab51f01cf2726880cb3f8073b636dbafa2aa8cacd256
  # DA reward event signature
  DARewardSignature: 0xc3898eb7106c1cb2f727da316a76320c0035f5692950aa7f6b65d20a5efaedc5

# DASigners contract info configurations
daSigners:
  # DASigners contract address
  address: "0x0000000000000000000000000000000000001000"
  # New signer event signature
  newSignerSignature: 0x679917c2006df1daaa987a56bf1d66e99764d5ad317892d9e83a6eb4e3f051e7
  # Socket updated event signature
  socketUpdatedSignature: 0x09617a966176a40f8f1410768b118506db0096484acd5811064fcc12038798de

# MySQL database configurations
store:
  mysql:
    host: 127.0.0.1:3306
    username: root
    password: Crb229!@#
    database: storage_scan_local
    # connMaxLifeTime: 3m
    # maxOpenConns: 10
    # maxIdleConns: 10

stat:
  # The block number from which to stat
  blockOnStatBegin: 471900
  # The minimum interval for tx stat
  # minStatIntervalDailyTx: 10m
  # The minimum interval for submit stat
  # minStatIntervalDailySubmit: 10m
  # The interval for data uplink rate stat
  # statIntervalDataUplinkRate: 1s

# Api configurations
api:
  endpoint: :12345
  # recoveryDisabled: false
  # corsOrigins: []
  # logger: false

# Logs configurations
log:
  # Available levels are `trace`, `debug`, `info`, `error` and `fatal`
  level: info
  forceColor: false

# Alert Configurations
#alert:
#  # Custom tags are used to distinguish between different networks and environments.
#  # For example, they can be used to differentiate between mainnet/testnet, prod/test/dev, etc.
#  customTags: [local]
#  # Channels are used for sending notifications.
#  # Each channel is identified by a unique key (e.g., channel ID), which is case insensitive.
#  # The value for each key is the configuration for that channel.
#  channels:
#    tgrobot:
#      # The type of the channel. In this case, it's 'telegram'.
#      platform: telegram
#      # The API token for the Telegram robot.
#      apiToken: 7224540870:AAEZbgMcOcCRRWQfrKuPSSreXgmZ72OeL7k
#      # The chat ID for the Telegram chat where the alerts are sent.
#      chatId: "-1002154262394"
